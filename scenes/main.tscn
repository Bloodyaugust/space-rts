[gd_scene load_steps=20 format=2]

[ext_resource path="res://lib/redux/main.gd" type="Script" id=1]
[ext_resource path="res://behaviors/generate_map.tscn" type="PackedScene" id=2]
[ext_resource path="res://resources/themes/kenney/kenney.tres" type="Theme" id=3]
[ext_resource path="res://ui/screens/BuildingInspector.tscn" type="PackedScene" id=4]
[ext_resource path="res://ui/screens/ResourceContainer.tscn" type="PackedScene" id=5]
[ext_resource path="res://actors/Buildings/refinery.tscn" type="PackedScene" id=6]
[ext_resource path="res://actors/Buildings/logistics-drone-factory.tscn" type="PackedScene" id=7]
[ext_resource path="res://behaviors/spawn_point.tscn" type="PackedScene" id=8]
[ext_resource path="res://behaviors/spawn_controller.tscn" type="PackedScene" id=9]
[ext_resource path="res://scripts/classes/BuildingGhost.gd" type="Script" id=10]
[ext_resource path="res://ui/screens/CommandInspector.tscn" type="PackedScene" id=11]

[sub_resource type="GDScript" id=1]
script/source = "extends Camera2D

export var camera_move_speed : float

func _physics_process(delta):
  if Input.is_action_pressed(\"ui_right\"):
    translate(Vector2(1, 0) * camera_move_speed * delta)
  if Input.is_action_pressed(\"ui_left\"):
    translate(Vector2(-1, 0) * camera_move_speed * delta)
  if Input.is_action_pressed(\"ui_down\"):
    translate(Vector2(0, 1) * camera_move_speed * delta)
  if Input.is_action_pressed(\"ui_up\"):
    translate(Vector2(0, -1) * camera_move_speed * delta)
"

[sub_resource type="Shader" id=2]
code = "shader_type canvas_item;
render_mode blend_mix;

uniform float star_threshold : hint_range(0, 1);
uniform vec4 star_color : hint_color;
uniform vec4 background_color : hint_color;

void fragment() {
  COLOR = texture(TEXTURE, UV);
  
  if (distance(COLOR, star_color) < star_threshold) {
    COLOR = star_color;
  } else {
    COLOR = background_color
  }
}"

[sub_resource type="ShaderMaterial" id=3]
shader = SubResource( 2 )
shader_param/star_threshold = 0.469
shader_param/star_color = Color( 1, 1, 1, 1 )
shader_param/background_color = null

[sub_resource type="OpenSimplexNoise" id=4]
seed = 100
period = 7.0
persistence = 0.384
lacunarity = 2.54

[sub_resource type="NoiseTexture" id=5]
flags = 64
width = 1920
height = 1080
seamless = true
noise = SubResource( 4 )

[sub_resource type="GDScript" id=6]
script/source = "extends TextEdit

onready var map_generator: Node = $\"../../generate_map\"

func _ready():
  map_generator.connect(\"map_generated\", self, \"on_map_generated\")
  
  on_map_generated()

func on_map_generated():
  text = str(map_generator.get_noise_seed())"

[sub_resource type="OpenSimplexNoise" id=7]
octaves = 1
period = 5.0
persistence = 0.0
lacunarity = 0.1

[sub_resource type="NoiseTexture" id=8]
width = 25
height = 25
noise = SubResource( 7 )

[node name="Node2D" type="Node2D"]
script = ExtResource( 1 )

[node name="generate_map" parent="." instance=ExtResource( 2 )]
seed_id = 458373585

[node name="Camera2D" type="Camera2D" parent="."]
position = Vector2( 893.261, 537.812 )
current = true
process_mode = 0
drag_margin_left = 0.0
drag_margin_top = 0.0
drag_margin_right = 0.0
drag_margin_bottom = 0.0
script = SubResource( 1 )
camera_move_speed = 500.0

[node name="ParallaxBackground" type="ParallaxBackground" parent="."]

[node name="ParallaxLayer" type="ParallaxLayer" parent="ParallaxBackground"]
motion_scale = Vector2( 0.1, 0.1 )
motion_mirroring = Vector2( 1920, 1080 )

[node name="Sprite" type="Sprite" parent="ParallaxBackground/ParallaxLayer"]
material = SubResource( 3 )
texture = SubResource( 5 )
centered = false

[node name="CanvasLayer" type="CanvasLayer" parent="."]

[node name="Button" type="Button" parent="CanvasLayer"]
margin_right = 178.638
margin_bottom = 42.7363
theme = ExtResource( 3 )
text = "Regenerate Map"

[node name="TextEdit" type="TextEdit" parent="CanvasLayer"]
margin_top = 50.0
margin_right = 180.0
margin_bottom = 90.0
theme = ExtResource( 3 )
text = "this is text"
readonly = true
script = SubResource( 6 )

[node name="ScreenContainer" type="MarginContainer" parent="CanvasLayer"]
anchor_top = 1.0
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = 600.0
margin_top = -256.0
margin_right = -600.0
grow_horizontal = 2
rect_min_size = Vector2( 720, 256 )
theme = ExtResource( 3 )
custom_constants/margin_right = 20
custom_constants/margin_top = 20
custom_constants/margin_left = 20
custom_constants/margin_bottom = 20
__meta__ = {
"_edit_use_anchors_": false
}

[node name="BuildingInspector" parent="CanvasLayer/ScreenContainer" instance=ExtResource( 4 )]
visible = false
margin_bottom = 236.0

[node name="CommandInspector" parent="CanvasLayer/ScreenContainer" instance=ExtResource( 11 )]

[node name="ResourceContainer" parent="CanvasLayer" instance=ExtResource( 5 )]

[node name="NoiseExperiment" type="Sprite" parent="."]
visible = false
position = Vector2( 22.6642, 58.6946 )
texture = SubResource( 8 )

[node name="Refinery" parent="." instance=ExtResource( 6 )]
position = Vector2( 584, 432 )

[node name="LogisticsDroneFactory" parent="." instance=ExtResource( 7 )]
position = Vector2( 771.753, 628.557 )

[node name="LogisticsDroneFactory2" parent="." instance=ExtResource( 7 )]
position = Vector2( 508.218, 589.515 )

[node name="SpawnPoint" parent="." instance=ExtResource( 8 )]
position = Vector2( 432.719, 387.169 )

[node name="SpawnPoint2" parent="." instance=ExtResource( 8 )]
position = Vector2( 930.101, 728.971 )

[node name="SpawnController" parent="." instance=ExtResource( 9 )]
pause_mode = 1
spawn_interval = 0.0

[node name="BuildingGhost" type="Node2D" parent="."]
position = Vector2( 746.393, 459.319 )
script = ExtResource( 10 )
id = "refinery"
[connection signal="pressed" from="CanvasLayer/Button" to="generate_map" method="generate_map"]
